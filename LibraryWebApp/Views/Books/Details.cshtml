@model LibraryWebApp.Models.ViewModels.BookDetailsViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Hidden("IsAuthenticated", Request.IsAuthenticated)

<div id="container" class="container">

    <div class="row bg-primary text-center">
        <h2>Book Details</h2>
    </div>
    <br />

    @if (Model.Book.Quantity > 0)
    {
        <p>
            <strong>@Model.Book.Quantity editions</strong> of <strong>@Model.Book.Title</strong> found in the catalog.
        </p>
    }
    else
    {
        <p>
            <strong class="text-danger">This book is out of stock</strong>
        </p>
    }

    <div class="row">
        <div class="col-sm-2 col-md-3 col-lg-2">
            <img class="img-responsive" src="@Model.Book.CoverURL" />
        </div>

        <div class="col-sm-5 col-md-6 col-lg-7">
            <h4>@Model.Book.Title</h4>
            <p>
                by
                @foreach (var item in Model.Book.Authors)
                {
                    @Html.ActionLink(item.Name, "Details", "Authors", new { id=item.Id }, new {})
                }
            </p>

            <p>Published in <span>@Model.Book.PublishPlace</span></p>
            <p>
                by
                @foreach (var item in Model.Book.Publishers)
                {
                    @Html.ActionLink(item.Name, "Details", "Publishers", new { id = item.Id }, new {})
                }
            </p>

            <h4>The physical object:</h4>
            <p>Number of pages: @Model.Book.Pages</p>
            <p>Publish date: @Model.Book.PublishDate</p>

            @if (User.IsInRole("Admin") || User.IsInRole("Staff"))
            {
                @Html.ActionLink("Edit", "Edit", "Books", new { id = Model.Book.Id }, new { @class = "btn btn-warning" })
            }
            @if (User.IsInRole("Admin"))
            {
                @Html.ActionLink("Delete", "Delete", "Books", new { id = Model.Book.Id }, new { @class = "btn btn-danger" })
            }
        </div>

        <div class="col-sm-5 col-md-3 col-lg-3">
            <div id="nav" style="border: 2px dotted gray;">
                <p class="text-center">
                    <strong>Book price: <span id="book-price">@Model.Book.Price</span></strong>
                </p>
                <p class="text-center">
                    <strong>Like this book?</strong>
                </p>
                <div class="text-center" id="btn">

                    @if (Model.Book.Quantity > 0)
                    {
                        <button type="button" class="btn btn-info js-add-to-cart">Add to cart</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-info " title="Out of stock" disabled>Add to cart</button>
                    }
                </div>
                <br />

                <div class="text-center">
                    <button type="button" class="btn btn-info review-button">Leave a review</button>
                </div>

                <br />

                <div class="text-center">
                    @Html.ActionLink("Back to list", "", "", new { }, new { @class = "btn btn-primary" })
                </div>

                <hr />

                <p class="text-center">
                    <strong>Share this book:</strong>
                </p>

                <div id="social" class="text-center">
                    <a href="http://www.facebook.com/">
                        <img src="/images/facebook.png">
                    </a>

                    <a href="http://www.twitter.com/">
                        <img src="/images/twitter.png">
                    </a>
                </div>
            </div>
        </div>
    </div>

    <br /><br />

    @if (Model.BooksByGenre.Count > 0)
    {
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <h4 style="color: firebrick">
                    You might also want to read the following books from @Model.Book.Genre.Name genre:
                </h4>
            </div>
        </div>

        <div id="genreCarousel" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                @for (int i = 0; i < Model.BooksByGenre.Count; ++i)
                {
                    if (i == 0)
                    {
                        <li data-target="#genreCarousel" data-slide-to="@i" class="active"></li>
                    }
                    else
                    {
                        <li data-target="#genreCarousel" data-slide-to="@i"></li>
                    }
                }
            </ol>

            <div class="carousel-inner" role="listbox" style="background-color: gray">
                @for (int i = 0; i < Model.BooksByGenre.Count; ++i)
                {
                    if (i == 0)
                    {
                        <div class="item active">
                            <a href="/Books/Details/@Model.BooksByGenre[i].Id">
                                <img src="@Model.BooksByGenre[i].CoverURL" class="img-responsive img-thumbnail center-block" />
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="item">
                            <a href="/Books/Details/@Model.BooksByGenre[i].Id">
                                <img src="@Model.BooksByGenre[i].CoverURL" class="img-responsive img-thumbnail center-block" />
                            </a>
                        </div>
                    }
                }

            </div>
            <a class="left carousel-control" href="#genreCarousel" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#genreCarousel" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
        <br />
    }

    @if (Model.ReviewsForBook.Count > 0)
    {
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <h4 style="color: firebrick">Reviews </h4>
            </div>
        </div>

        foreach (var user in Model.ReviewsForBook)
        {
            <div class="media">
                <div class="media-left">
                    <img src="~/images/icon.jpg" style="width: 60px" />
                </div>
                <div class="media-body">
                    <p class="media-heading"><strong>@user.ReviewerUsername</strong> on <strong>@user.ReviewDate</strong></p>
                    <p>@user.ReviewMessage</p>
                </div>
            </div>

            <hr />
        }
    }
    else
    {
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <h4 class="text-danger alert-danger">
                    No reviews for this book! If you have thoughts about this book, please <a class="review-button" href="#">leave a review</a>.
                </h4>
            </div>
        </div>
    }

</div>

<div id="dialog-review">
    <label for="review">Your review:</label>
    <textarea id="review" class="form-control" placeholder="Write something for this book..." rows="10"></textarea>
</div>

@section styles
{
    <link rel="stylesheet" type="text/css" href="@Href("~/Content/jquery-ui.css")" />
    <link rel="stylesheet" type="text/css" href="@Href("~/Content/BookDetailsCss.css")" />
}

@section scripts
{
    <script type="text/javascript" src="@Href("~/Scripts/jquery-ui.js")"></script>

    <script type="text/javascript">
        var userId = "@User.Identity.Name";
        var bookCount = @Model.Book.Quantity;
        var bookId = @Model.Book.Id;

        $(document).ready(function () {
            var price = $("#book-price").text();
            $("#book-price").text(new Intl.NumberFormat('en-US', { style: "currency", currency: "USD" }).format(price));

            $(".js-add-to-cart").on("click",
                function() {
                    if ($("#IsAuthenticated").attr("value") === "False") {
                        document.location = "/Account/Login?ReturnUrl=%2FBooks/Details/" + bookId;
                        return;
                    }

                    $.post("/ShoppingCart/AddToCart",
                        { "id": bookId },
                        function(response) {
                            console.log(response);
                            $("#cart-items-count").text(response.CartCount);
                            $(".message").text("Go to checkout");
                        });
                    bookCount--;

                    if (bookCount === 0) {
                        $(".js-add-to-cart").prop("disabled", true);
                        $(".js-add-to-cart").prop("title", "Out of stock");
                    }
                });

            $('.carousel').carousel({
                animation: 5000,
                pause: "hover",
                auto: 10,
                scroll: 1,
                visible: 3,
                wrap: "circular"
            });

            var dialog = $("#dialog-review").dialog({
                title: "Leave a review",
                resizable: false,
                draggable: false,
                autoOpen: false,
                height: 400,
                width: 350,
                modal: true,
                buttons: {
                    "Submit": function() {
                        var reviewMessage = $("#review").val();

                        if (reviewMessage !== "")
                            $.post("/Books/LeaveReview",
                                {
                                    BookID: bookId,
                                    ReviewerUsername: userId,
                                    ReviewMessage: reviewMessage,
                                    ReviewDate: Date.now()
                                },
                                function(response) {
                                    if (response.Code === "200")
                                        location.reload();
                                    else
                                        alert(response.Message);
                                });
                    },
                    "Cancel": function() {
                        $(this).dialog("close");
                    }
                }
            });

            $(".review-button").click(function() {
                if ($("#IsAuthenticated").attr("value") === "False") {
                    document.location = "/Account/Login?ReturnUrl=%2FBooks/Details/" + bookId;
                    return;
                }
                dialog.dialog("open");
            });
        });
    </script>
}