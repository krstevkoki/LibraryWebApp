@model LibraryWebApp.Models.ViewModels.AddAuthorToBookModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="container" class="container">
    <div class="row bg-primary">
        <div class="col-sm-12 text-center">
            <h3>Edit</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-8">
            @using (Html.BeginForm("Edit", "Books", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <br />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger small" })
                    @Html.HiddenFor(model => model.Book.Id)

                    <div class="form-group required">
                        @Html.LabelFor(model => model.Book.Title, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Book.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Book.Title, "", new { @class = "text-danger alert-danger small" })
                        </div>
                    </div>

                    <div class="form-group required">
                        @Html.LabelFor(model => model.Book.Pages, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Book.Pages, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Book.Pages, "", new { @class = "text-danger alert-danger small" })
                        </div>
                    </div>

                    <div class="form-group required">
                        @Html.LabelFor(model => model.Book.Quantity, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Book.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Book.Quantity, "", new { @class = "text-danger alert-danger small" })
                        </div>
                    </div>

                    <div class="form-group required">
                        @Html.LabelFor(model => model.Book.PublishPlace, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Book.PublishPlace, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Book.PublishPlace, "", new { @class = "text-danger alert-danger small" })
                        </div>
                    </div>

                    <div class="form-group required">
                        @Html.LabelFor(model => model.Book.PublishDate, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            @Html.TextBox("Book.PublishDate", Model.Book.PublishDate.ToShortDateString(), new { @class = "form-control", type = "date", id = "Book_PublishDate" })
                            @Html.ValidationMessageFor(model => model.Book.PublishDate, "", new { @class = "text-danger alert-danger small" })
                        </div>
                    </div>

                    <div class="form-group required">
                        @Html.LabelFor(model => model.Book.Price, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Book.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Book.Price, "", new { @class = "text-danger alert-danger small" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Book.CoverURL, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Book.CoverURL, new { @class = "form-control", rows = "5" })
                            @Html.ValidationMessageFor(model => model.Book.CoverURL, "", new { @class = "text-danger alert-danger small" })
                        </div>
                    </div>

                    <div class="form-group required">
                        @Html.LabelFor(model => model.SelectedAuthor, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            <input list="authors-list" id="SelectedAuthor" name="SelectedAuthor" class="form-control" value="@(Model.Book.Authors.Count != 0 ? Model.Book.Authors.ElementAt(0).Id.ToString() : "")" />
                            <datalist id="authors-list">
                                @foreach (var author in Model.Authors)
                                {
                                    <option value="@author.Id">@author.Name</option>
                                }
                            </datalist>
                            @Html.ValidationMessageFor(model => model.SelectedAuthor, "", new { @class = "text-danger alert-danger small" })
                            @if (ViewBag.ErrorAuthor != null)
                            {
                                <span class="text-danger alert-danger small">@ViewBag.ErrorAuthor</span>
                            }
                        </div>
                    </div>

                    <div class="form-group required">
                        @Html.LabelFor(model => model.SelectedPublisher, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            <input list="publishers-list" id="SelectedPublisher" name="SelectedPublisher" class="form-control" value="@(Model.Book.Publishers.Count != 0 ? Model.Book.Publishers.ElementAt(0).Id.ToString() : "")" />
                            <datalist id="publishers-list">
                                @foreach (var publisher in Model.Publishers)
                                {
                                    <option value="@publisher.Id">@publisher.Name</option>
                                }
                            </datalist>
                            @Html.ValidationMessageFor(model => model.SelectedPublisher, "", new { @class = "text-danger alert-danger small" })
                            @if (ViewBag.ErrorPublisher != null)
                            {
                                <span class="text-danger alert-danger small">@ViewBag.ErrorPublisher</span>
                            }
                        </div>
                    </div>

                    <div class="form-group required">
                        @Html.LabelFor(model => model.SelectedGenre, htmlAttributes: new { @class = "control-label col-md-2", style = "cursor: pointer;" })
                        <div class="col-md-10">
                            <input list="genres-list" id="SelectedGenre" name="SelectedGenre" class="form-control" value="@(Model.Book.Genre != null ? Model.Book.Genre.Id.ToString() : "")" />
                            <datalist id="genres-list">
                                @foreach (var genre in Model.Genres)
                                {
                                    <option value="@genre.Id">@genre.Name</option>
                                }
                            </datalist>
                            @Html.ValidationMessageFor(model => model.SelectedGenre, "", new { @class = "text-danger alert-danger small" })
                            @if (ViewBag.ErrorGenre != null)
                            {
                                <span class="text-danger alert-danger small">@ViewBag.ErrorGenre</span>
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section styles
{
    <style>
        .form-group.required .control-label:after {
            content: "*";
            font-size: 16px;
            color: red;
        }
    </style>
}