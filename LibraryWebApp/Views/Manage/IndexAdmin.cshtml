@model LibraryWebApp.Models.ViewModels.IndexViewModel
@{
    ViewBag.Title = "Manage";
}

<h2 id="a">Admin View Only</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4 id="b">Your personal data</h4>
    <hr/>
    <dl class="dl-horizontal">
        <dt class="dt">User: </dt>
        <dd class="dd">@User.Identity.Name</dd>
        <dt class="dt">User Role:</dt>
        <dd class="dd">
            === ADMIN ===
        </dd>
        <dt class="dt">Warning:</dt>
        <dd class="dd text-uppercase text-danger">
            <b>
                You are the admin. Be careful what you're doing. <br/>
                You have the full power. Just kidding you can't do shit!
            </b>
        </dd>
    </dl>
    <ul class="nav nav-tabs">
        <li class="active">
            <a data-toggle="tab" href="#changeDetails">Edit personal details</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageUsers">Manage Users</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageBooks">Manage Books</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageAuthors">Manage Authors</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageReviews">Manage Reviews</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageGenres">Manage Genres</a>
        </li>
        <li>
            <a data-toggle="tab" href="#managePublishers">Manage Publishers</a>
        </li>
    </ul>

    <div class="tab-content">
        <div id="changeDetails" class="tab-pane fade in active">
            <br />
            @Html.ActionLink("Change password", "ChangePassword", "Manage", null, new {@class = "btn btn-primary"})
        </div>
        <div id="manageUsers" class="tab-pane fade in">
            <div class="table-responsive">
                <table id="table-users" class="table table-striped table-bordered table-hover">
                    <thead>
                    <tr>
                        <th class="text-center">
                            Username
                        </th>
                        <th class="text-center">
                            Email
                        </th>
                        <th class="text-center">
                            First name
                        </th>
                        <th class="text-center">
                            Last name
                        </th>
                        <th class="text-center">
                            Gender
                        </th>
                        <th class="text-center">
                            Age
                        </th>
                        <th class="text-center">
                            Is Member
                        </th>
                        <th class="text-center">
                            Member Since
                        </th>
                        <th class="text-center">
                            Points
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var user in @Model.Users)
                    {
                        <tr class="text-center">
                            <td>@user.UserName</td>
                            <td>@user.Email</td>
                            <td>@user.FirstName</td>
                            <td>@user.LastName</td>
                            <td>
                                @if (user.Gender)
                                {
                                    <span>Male</span>
                                }
                                else
                                {
                                    <span>Female</span>
                                }
                            </td>
                            <td>@user.Age</td>
                            <td>@user.IsMember</td>
                            <td>
                                @if (user.MemberSince.HasValue)
                                {
                                    <span>@user.MemberSince.Value</span>
                                }
                                else
                                {
                                    <span>/</span>
                                }
                            </td>
                            <td>@user.Points</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        <div id="manageBooks" class="tab-pane fade">
            @Html.ActionLink("Add new Book", "Create", "Books", null, new {@class = "btn btn-sm btn-default"})
            <br/><br/>
            <div class="table-responsive">
                <table id="table-books" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                    <tr>
                        <th>
                            Title
                        </th>
                        <th>
                            Image
                        </th>
                        <th>
                            Genre
                        </th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="manageAuthors" class="tab-pane fade">
            @Html.ActionLink("Add new Author", "Create", "Authors", null, new {@class = "btn btn-sm btn-default"})
            <br/><br/>
            <div class="table-responsive">
                <table id="table-authors" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Image
                        </th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="manageReviews" class="tab-pane fade">
            @Html.ActionLink("Add new Review", "Create", "Reviews", null, new {@class = "btn btn-sm btn-default"})
            <br/><br/>
            <div class="table-responsive">
                <table id="table-reviews" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                    <tr>
                        <th>
                            Reviewer Username
                        </th>
                        <th>
                            Message
                        </th>
                        <th>
                            Date
                        </th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="manageGenres" class="tab-pane fade">
            @Html.ActionLink("Add new Genre", "Create", "Genres", null, new {@class = "btn btn-sm btn-default"})
            <br/><br/>
            <div class="table-responsive">
                <table id="table-genres" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Description
                        </th>
                        <th>

                        </th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="managePublishers" class="tab-pane fade">
            @Html.ActionLink("Add new Publisher", "Create", "Publishers", null, new {@class = "btn btn-sm btn-default"})
            <br/><br/>
            <div class="table-responsive">
                <table id="table-publishers" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Country
                            </th>
                            <th>
                                City
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
</div>
</div>

@section styles
{
    <link rel="stylesheet" type="text/css" href="@Href("../../Content/IndexAdminCss.css")"/>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
}

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function() {
            $("#table-users").DataTable();

            $("#table-authors").DataTable({
                ajax: {
                    url: "/api/AuthorsApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Name",
                        render: function(data, type, client) {
                            return '<a href="/Authors/Details?id=' + client.Id + '">' + client.Name + '</a>';
                        }
                    },
                    {
                        data: "ImageUrl",
                        render: function(data, type, client) {
                            return '<img src="' + client.ImageUrl + '" style="max-width: 200px; max-height: 200px"/>';
                        }
                    }
                ]
            });

            $("#table-books").DataTable({
                ajax: {
                    url: "/api/BooksApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Name",
                        render: function(data, type, client) {
                            return '<a href="/Books/Details?id=' + client.Id + '">' + client.Title + '</a>';
                        }
                    },
                    {
                        data: "ImageUrl",
                        render: function(data, type, client) {
                            return '<img src="' + client.CoverUrl + '" style="max-width: 200px; max-height: 200px"/>';
                        }
                    }, {
                        data: "Genre"
                    }
                ]
            });

            $("#table-reviews").DataTable({
                ajax: {
                    url: "/api/ReviewsApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "ReviewerUsername"
                    },
                    {
                        data: "ReviewMessage"
                    }, {
                        data: "ReviewDate"
                    },
                    {
                        data: "",
                        render: function(data, type, client) {
                            return '<a href="/Reviews/Edit?id=' + client.Id + '" class="btn btn-primary">Edit</a>';
                        }
                    }
                ]
            });

            $("#table-genres").DataTable({
                ajax: {
                    url: "/api/GenresApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Name"
                    },
                    {
                        data: "Description"
                    },
                    {
                        data: "",
                        render: function(data, type, client) {
                            return '<a href="/Genres/Edit?id=' + client.Id + '" class="btn btn-primary">Edit</a>';
                        }
                    }
                ]
            });

            $("#table-publishers").DataTable({
                ajax: {
                    url: "/api/PublishersApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Name",
                        render: function(data, type, client) {
                            return '<a href="/Publishers/Details?id=' + client.Id + '">' + client.Name + '</a>';
                        }
                    },
                    {
                        data: "Country"
                    },
                    {
                        data: "City"
                    }
                ]
            });
        });
    </script>
}