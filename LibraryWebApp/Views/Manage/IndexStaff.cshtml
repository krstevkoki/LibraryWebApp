@model LibraryWebApp.Models.ViewModels.IndexViewModel
@{
    ViewBag.Title = "Manage";
}


<div id="container" class="container">
    <div class="row bg-primary">
        <div class="col-sm-12 text-center">
            <h3>Staff section</h3>
        </div>
    </div>
      
    @if (ViewBag.StatusMessage != null)
    {
        <br />
        <div class="alert alert-success text-success">@ViewBag.StatusMessage</div>
    }

    <br />
    <h4 id="b">Your personal data</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt class="dt">Username: </dt>
        <dd class="dd">@User.Identity.Name</dd>
        <dt class="dt">User Role:</dt>
        <dd class="dd">
            === STAFF ===
        </dd>
    </dl>
    <ul class="nav nav-tabs">
        <li class="active">
            <a data-toggle="tab" href="#changeDetails">Personal details</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageBooks">Manage Books</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageAuthors">Manage Authors</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageReviews">Manage Reviews</a>
        </li>
        <li>
            <a data-toggle="tab" href="#manageGenres">Manage Genres</a>
        </li>
        <li>
            <a data-toggle="tab" href="#managePublishers">Manage Publishers</a>
        </li>
    </ul>

    <div class="tab-content">
        <div id="changeDetails" class="tab-pane fade in active">
            <br />
            @Html.ActionLink("Change password", "ChangePassword", "Manage", null, new { @class = "btn btn-primary" })
            @Html.ActionLink("Edit details", "EditDetails", "Manage", new { ReturnUrl = "/Manage" }, new { @class = "btn btn-primary" })
            <br />
            <br />

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(m => m.User.FirstName, new { @class = "col-md-2 control-label", style = "cursor: pointer;" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.User.FirstName, new { @class = "form-control", @readonly = true, style = "cursor: not-allowed;" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.LastName, new { @class = "col-md-2 control-label", style = "cursor: pointer;" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.User.LastName, new { @class = "form-control", @readonly = true, style = "cursor: not-allowed;" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Age, new { @class = "col-md-2 control-label", style = "cursor: pointer;" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.User.Age, new { @class = "form-control", @readonly = true, style = "cursor: not-allowed;" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Gender, new { @class = "col-md-2 control-label", style = "cursor: pointer;" })
                    <div class="col-md-10">
                        @Html.TextBox("Gender", Model.User.Gender ? "Male" : "Female", new { @class = "form-control", @readonly = true, style = "cursor: not-allowed;" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Address, new { @class = "col-md-2 control-label", style = "cursor: pointer;" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.User.Address, new { @class = "form-control", @readonly = true, style = "cursor: not-allowed;" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.City, new { @class = "col-md-2 control-label", style = "cursor: pointer;" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.User.City, new { @class = "form-control", @readonly = true, style = "cursor: not-allowed;" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Country, new { @class = "col-md-2 control-label", style = "cursor: pointer;" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.User.Country, new { @class = "form-control", @readonly = true, style = "cursor: not-allowed;" })
                    </div>
                </div>
            </div>
        </div>
        <div id="manageBooks" class="tab-pane fade">
            <br />
            @Html.ActionLink("Add new Book", "Create", "Books", new { ReturnUrl = "/Manage" }, new { @class = "btn btn-sm btn-default" })
            <br /><br />
            <div class="table-responsive">
                <table id="table-books" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>
                                Title
                            </th>
                            <th>
                                Image
                            </th>
                            <th>
                                Genre
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="manageAuthors" class="tab-pane fade">
            <br />
            @Html.ActionLink("Add new Author", "Create", "Authors", new { ReturnUrl = "/Manage" }, new { @class = "btn btn-sm btn-default" })
            <br /><br />
            <div class="table-responsive">
                <table id="table-authors" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Image
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="manageReviews" class="tab-pane fade">
            <br /><br />
            <div class="table-responsive">
                <table id="table-reviews" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>
                                Reviewer Username
                            </th>
                            <th>
                                Message
                            </th>
                            <th>
                                Date
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="manageGenres" class="tab-pane fade">
            <br />
            @Html.ActionLink("Add new Genre", "Create", "Genres", new { ReturnUrl = "/Manage" }, new { @class = "btn btn-sm btn-default" })
            <br /><br />
            <div class="table-responsive">
                <table id="table-genres" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Description
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div id="managePublishers" class="tab-pane fade">
            <br />
            @Html.ActionLink("Add new Publisher", "Create", "Publishers", new { ReturnUrl = "/Manage" }, new { @class = "btn btn-sm btn-default" })
            <br /><br />
            <div class="table-responsive">
                <table id="table-publishers" style="width: 100%" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Country
                            </th>
                            <th>
                                City
                            </th>
                            <th>
                                Number
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section styles
{
    <link rel="stylesheet" type="text/css" href="@Href("../../Content/IndexStaffCss.css")" />
}

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function() {
            $("#table-books").DataTable({
                ajax: {
                    url: "/api/BooksApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Name",
                        render: function(data, type, client) {
                            return '<a href="/Books/Details?id=' + client.Id + '&ReturnUrl=%2FManage">' + client.Title + '</a>';
                        }
                    },
                    {
                        data: "ImageUrl",
                        render: function(data, type, client) {
                            return '<img src="' + client.CoverUrl + '" style="max-width: 200px; max-height: 200px"/>';
                        }
                    }, {
                        data: "Genre"
                    },
                    {
                        data: "",
                        render: function (data, type, client) {
                            return '<a href="/Books/Edit?id=' + client.Id + '&ReturnUrl=%2FManage" class="btn btn-warning">Edit</a>';
                        }
                    }
                ]
            });

            $("#table-authors").DataTable({
                ajax: {
                    url: "/api/AuthorsApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Name",
                        render: function (data, type, client) {
                            return '<a href="/Authors/Details?id=' + client.Id + '&ReturnUrl=%2FManage">' + client.Name + '</a>';
                        }
                    },
                    {
                        data: "ImageUrl",
                        render: function (data, type, client) {
                            return '<img src="' + client.ImageUrl + '" style="max-width: 200px; max-height: 200px"/>';
                        }
                    },
                    {
                        data: "",
                        render: function (data, type, client) {
                            return '<a href="/Authors/Edit?id=' + client.Id + '&ReturnUrl=%2FManage" class="btn btn-warning">Edit</a>';
                        }
                    }
                ]
            });

            $("#table-reviews").DataTable({
                ajax: {
                    url: "/api/ReviewsApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "ReviewerUsername"
                    },
                    {
                        data: "ReviewMessage"
                    }, {
                        data: "ReviewDate"
                    },
                    {
                        data: "",
                        render: function(data, type, client) {
                            return '<a href="/Reviews/Edit?id=' + client.Id + '&ReturnUrl=%2FManage" class="btn btn-warning">Edit</a>';
                        }
                    }
                ]
            });

            $("#table-genres").DataTable({
                ajax: {
                    url: "/api/GenresApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Name",
                        render: function(data, type, client) {
                            return '<a href="/Genres/Details?id=' + client.Id + '&ReturnUrl=%2FManage">' + client.Name + '</a>';
                        }
                    },
                    {
                        data: "Description"
                    },
                    {
                        data: "",
                        render: function(data, type, client) {
                            return '<a href="/Genres/Edit?id=' + client.Id + '&ReturnUrl=%2FManage" class="btn btn-warning">Edit</a>';
                        }
                    }
                ]
            });

            $("#table-publishers").DataTable({
                ajax: {
                    url: "/api/PublishersApi",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "Name",
                        render: function(data, type, client) {
                            return '<a href="/Publishers/Details?id=' + client.Id + '&ReturnUrl=%2FManage">' + client.Name + '</a>';
                        }
                    },
                    {
                        data: "Country"
                    },
                    {
                        data: "City"
                    },
                    {
                        data: "PhoneNumber"
                    },
                    {
                        data: "",
                        render: function(data, type, client) {
                            return '<a href="/Publishers/Edit?id=' + client.Id + '&ReturnUrl=%2FManage" class="btn btn-warning">Edit</a>';
                        } 
                    }
                ]
            });
        });
    </script>
}